// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  emailLogs EmailLog[]
  tasks     Task[]
  companies Company[]
}

model Company {
  id        String   @id @default(cuid())
  name      String
  url       String?
  logoUrl   String?
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields:[userId], references: [id], onDelete: Cascade)
  @@index([userId])
}

model EmailLog {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId],references: [id],onDelete: Cascade)
  body      String?
  receivedAt String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId])
}

model Task {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId],references: [id],onDelete: Cascade)
  title     String
  description String?
  isCompleted Boolean @default(false)
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@index([userId])
}